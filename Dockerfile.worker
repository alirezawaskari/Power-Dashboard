FROM php:8.2-cli-alpine

WORKDIR /app

# Install system dependencies
RUN echo "https://repo.iut.ac.ir/repo/alpine/v3.22/main" > /etc/apk/repositories && \
    echo "https://repo.iut.ac.ir/repo/alpine/v3.22/community" >> /etc/apk/repositories && \
    apk update && apk add --no-cache \
    composer \
    postgresql-dev \
    libsodium-dev \
    libzip-dev \
    libxml2-dev \
    zip \
    unzip \
    git \
    linux-headers \
    bison \
    re2c

# Install PHP extensions (only the ones that need to be compiled)
RUN docker-php-ext-install \
    pdo_pgsql \
    zip \
    sockets

# Extensions are already built-in and loaded, no need for ini files

# Copy composer files and install dependencies
COPY composer.json composer.lock ./

# Debug: Check what Composer sees
RUN composer show --platform || true

# Check what extensions Composer detects
RUN php -r "echo 'Extensions detected by Composer:' . PHP_EOL; foreach (get_loaded_extensions() as \$ext) { echo '- ' . \$ext . PHP_EOL; }"

# Check if extensions are actually loaded with extension_loaded()
RUN php -r "echo 'Extension check:' . PHP_EOL; echo 'session: ' . (extension_loaded('session') ? 'YES' : 'NO') . PHP_EOL; echo 'sodium: ' . (extension_loaded('sodium') ? 'YES' : 'NO') . PHP_EOL; echo 'fileinfo: ' . (extension_loaded('fileinfo') ? 'YES' : 'NO') . PHP_EOL; echo 'tokenizer: ' . (extension_loaded('tokenizer') ? 'YES' : 'NO') . PHP_EOL; echo 'sockets: ' . (extension_loaded('sockets') ? 'YES' : 'NO') . PHP_EOL; echo 'dom: ' . (extension_loaded('dom') ? 'YES' : 'NO') . PHP_EOL;"

# Configure Composer to use a faster mirror and force platform requirements
RUN composer config repo.packagist composer https://packagist.ir && \
    composer config platform.php 8.3.24 && \
    composer config platform.ext-session 8.3.24 && \
    composer config platform.ext-sodium 8.3.24 && \
    composer config platform.ext-fileinfo 8.3.24 && \
    composer config platform.ext-tokenizer 8.3.24 && \
    composer config platform.ext-sockets 8.3.24 && \
    composer config platform.ext-dom 8.3.24

RUN composer install --no-dev --optimize-autoloader --no-scripts --ignore-platform-reqs

# Copy application code
COPY . .

# Set permissions
RUN chown -R www-data:www-data /app \
    && chmod -R 755 /app/storage \
    && chmod -R 755 /app/bootstrap/cache

CMD ["sh", "-c", "php artisan migrate --force && php artisan queue:work --verbose --tries=3 --timeout=90"]
