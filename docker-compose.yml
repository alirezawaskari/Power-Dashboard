name: power-dashboard

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: power-dashboard-app
    restart: unless-stopped
    working_dir: /app
    volumes:
      - app_storage:/app/storage
      - app_cache:/app/bootstrap/cache
      - app_public:/app/public
    env_file:
      - .env
    depends_on:
      - worker
    networks:
      - power-dashboard

  nginx:
    image: nginx:alpine
    container_name: power-dashboard-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./infra/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./infra/nginx/default.conf:/etc/nginx/conf.d/default.conf.template
      - app_public:/app/public:ro
    environment:
      APP_URL: ${APP_URL}
    command: /bin/sh -c "envsubst '$$APP_URL' < /etc/nginx/conf.d/default.conf.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    depends_on:
      - app
    networks:
      - power-dashboard

  postgres:
    image: postgres:15-alpine
    container_name: power-dashboard-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - power-dashboard

  redis:
    image: redis:7-alpine
    container_name: power-dashboard-redis
    restart: unless-stopped
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    command: redis-server --requirepass "${REDIS_PASSWORD}"
    volumes:
      - redis_data:/data
    networks:
      - power-dashboard

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: power-dashboard-rabbitmq
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - power-dashboard

  worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    container_name: power-dashboard-worker
    restart: unless-stopped
    working_dir: /app
    volumes:
      - app_storage:/app/storage
      - app_cache:/app/bootstrap/cache
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
      - rabbitmq
    networks:
      - power-dashboard

volumes:
  postgres_data:
  redis_data:
  rabbitmq_data:
  app_storage:
  app_cache:
  app_public:

networks:
  power-dashboard:
    driver: bridge