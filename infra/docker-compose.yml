services:
  app:
    build:
      context: ..
      dockerfile: Dockerfile
    container_name: power-dashboard-app
    restart: unless-stopped
    working_dir: /app
    volumes:
      - ../storage:/app/storage
      - ../bootstrap/cache:/app/bootstrap/cache
    env_file:
      - ../.env
    depends_on:
      - worker
    networks:
      - power-dashboard

  nginx:
    image: nginx:alpine
    container_name: power-dashboard-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - power-dashboard

  postgres:
    image: postgres:15-alpine
    container_name: power-dashboard-postgres
    restart: unless-stopped
    env_file:
      - ../.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - power-dashboard

  redis:
    image: redis:7-alpine
    container_name: power-dashboard-redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - power-dashboard

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: power-dashboard-rabbitmq
    restart: unless-stopped
    env_file:
      - ../.env
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - power-dashboard

  worker:
    build:
      context: ..
      dockerfile: Dockerfile.worker
    container_name: power-dashboard-worker
    restart: unless-stopped
    working_dir: /app
    volumes:
      - ../storage:/app/storage
      - ../bootstrap/cache:/app/bootstrap/cache
    env_file:
      - ../.env
    depends_on:
      - postgres
      - redis
      - rabbitmq
    networks:
      - power-dashboard

volumes:
  postgres_data:
  redis_data:
  rabbitmq_data:

networks:
  power-dashboard:
    driver: host